{"version":3,"file":"narra-api.js","sources":["../projects/api/src/lib/enums/event-status.enum.ts","../projects/api/src/lib/enums/item-type.enum.ts","../projects/api/src/lib/enums/role-type.enum.ts","../projects/api/src/lib/enums/scenario-type.enum.ts","../projects/api/src/lib/enums/index.ts","../projects/api/src/lib/helpers/error.helper.ts","../projects/api/src/lib/helpers/meta.helper.ts","../projects/api/src/lib/helpers/index.ts","../projects/api/src/lib/models/author.ts","../projects/api/src/lib/models/candidate.ts","../projects/api/src/lib/models/connector.ts","../projects/api/src/lib/models/event.ts","../projects/api/src/lib/models/error.ts","../projects/api/src/lib/models/generator.ts","../projects/api/src/lib/models/item.ts","../projects/api/src/lib/models/ingest.ts","../projects/api/src/lib/models/library.ts","../projects/api/src/lib/models/meta.ts","../projects/api/src/lib/models/metable.ts","../projects/api/src/lib/models/module.ts","../projects/api/src/lib/models/authorship.ts","../projects/api/src/lib/models/pendable.ts","../projects/api/src/lib/models/project.ts","../projects/api/src/lib/models/provider.ts","../projects/api/src/lib/models/proxy.ts","../projects/api/src/lib/models/purgable.ts","../projects/api/src/lib/models/response.ts","../projects/api/src/lib/models/scenario.ts","../projects/api/src/lib/models/selectable.ts","../projects/api/src/lib/models/setting.ts","../projects/api/src/lib/models/synthesizer.ts","../projects/api/src/lib/models/user.ts","../projects/api/src/lib/models/video.ts","../projects/api/src/lib/models/index.ts","../projects/api/src/lib/services/server.service.ts","../projects/api/src/lib/services/connector.service.ts","../projects/api/src/lib/services/event.service.ts","../projects/api/src/lib/services/generator.service.ts","../projects/api/src/lib/services/item.service.ts","../projects/api/src/lib/services/library.service.ts","../projects/api/src/lib/services/project.service.ts","../projects/api/src/lib/services/provider.service.ts","../projects/api/src/lib/services/scenario.service.ts","../projects/api/src/lib/services/setting.service.ts","../projects/api/src/lib/services/synthesizer.service.ts","../projects/api/src/lib/services/system.service.ts","../projects/api/src/lib/services/upload.service.ts","../projects/api/src/lib/services/user.service.ts","../projects/api/src/lib/services/index.ts","../../projects/api/src/lib/index.ts","../../../projects/api/src/public-api.ts","../../../projects/api/src/narra-api.ts"],"sourcesContent":["/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport enum EventStatus {\r\n  pending = 'pending',\r\n  running = 'running',\r\n  done = 'done'\r\n}\r\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport enum ItemType {\r\n  text = 'text',\r\n  audio = 'audio',\r\n  video = 'video',\r\n  picture = 'picture'\r\n}\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport enum RoleType {\n  admin = 'admin',\n  author = 'author'\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport enum ScenarioType {\n  project = 'project',\n  library = 'library'\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport * from './event-status.enum';\r\nexport * from './item-type.enum';\r\nexport * from './role-type.enum';\r\nexport * from './scenario-type.enum';\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {throwError} from 'rxjs';\n\nexport class ErrorHelper {\n\n  public static handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Meta, Metable} from '../models';\n\nexport class MetaHelper {\n\n  public static getMeta(object: Metable, name: string): Meta {\n    return object.metadata.find((meta) => {\n      return meta.name === name;\n    });\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport * from './error.helper';\nexport * from './meta.helper';\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Author {\n  username: string;\n  name: string;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Proxy} from './proxy';\n\nexport interface Candidate {\n  library: string;\n  proxy: Proxy;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Connector {\n  identifier: string;\n  name: string;\n  description: string;\n  priority: number;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Item} from './item';\nimport {Library} from './library';\nimport {Project} from './project';\nimport {EventStatus} from '../enums';\n\nexport interface Event {\n  id: string;\n  message: string;\n  progress: number;\n  status: EventStatus;\n  item: Item;\n  library: Library;\n  project: Project;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Error {\n  message: string;\n  trace: string[];\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Generator {\n  name: string;\n  description: string;\n  dependency: string[];\n  priority: number;\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nimport {Library} from './library';\r\nimport {ItemType} from '../enums';\r\nimport {Purgable} from './purgable';\r\nimport {Pendable} from './pendable';\r\nimport {Metable} from './metable';\r\n\r\nexport interface Item extends Purgable, Pendable, Metable {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  type: ItemType;\r\n  thumbnails: string[];\r\n  library: Library;\r\n}\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Ingest {\n  url: string;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Scenario} from './scenario';\nimport {Authorship} from './authorship';\nimport {Purgable} from './purgable';\nimport {Metable} from './metable';\n\nexport interface Library extends Authorship, Purgable, Metable {\n  id: string;\n  name: string;\n  description: string;\n  shared: boolean;\n  scenario: Scenario;\n  thumbnails: string[];\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Meta {\n  name: string;\n  value: string;\n  generator: string;\n  public: boolean;\n  updated_at: Date;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Meta} from './meta';\n\nexport interface Metable {\n  metadata: Meta[];\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Module {\n  name: string;\n  version: string;\n  summary: string;\n  description: string;\n  authors: string[];\n  email: string[];\n  homepage: string;\n  license: string;\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nimport {Author} from './author';\r\n\r\nexport interface Authorship {\r\n  author: Author;\r\n  contributors: Author[];\r\n}\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Pendable {\n  pending: boolean;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Scenario} from './scenario';\nimport {Library} from './library';\nimport {Authorship} from './authorship';\nimport {Metable} from './metable';\n\nexport interface Project extends Authorship, Metable {\n  id: string;\n  name: string;\n  description: string;\n  public: boolean;\n  scenario: Scenario;\n  thumbnails: string[];\n  libraries: Library[];\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport interface Provider {\r\n  name: string;\r\n}\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {ItemType} from '../enums';\nimport {Selectable} from './selectable';\n\nexport interface Proxy extends Selectable {\n  name: string;\n  type: ItemType;\n  source_url: string;\n  download_url: string;\n  thumbnails: string[];\n  connector: string;\n  options: {};\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Purgable {\n  purged: boolean;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Error} from './error';\n\nexport type Response<T, Key extends string> = {\n  // handle errors\n  errors: Error[];\n  // handle data based on Key\n} & {[P in Key]: T};\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {ScenarioType} from '../enums';\nimport {Authorship} from './authorship';\n\nexport interface Scenario extends Authorship {\n  id: string;\n  name: string;\n  description: string;\n  type: ScenarioType;\n  shared: boolean;\n  thumbnails: string[];\n  updated_at: Date;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Selectable {\n  selected: boolean;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Setting {\n  name: string;\n  value: string;\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport interface Synthesizer {\n  title: string;\n  description: string;\n  dependency: string[];\n  priority: number;\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nimport {RoleType} from '../enums';\r\nimport {Author} from './author';\r\nimport {Provider} from './provider';\r\n\r\nexport interface User extends Author {\r\n  email: string;\r\n  image: string;\r\n  roles: RoleType[];\r\n  identities: Provider[];\r\n}\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Item} from './item';\n\nexport interface Video extends Item {\n  video_proxy_hq: string;\n  video_proxy_lq: string;\n  audio_proxy: string;\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport * from './author';\r\nexport * from './candidate';\r\nexport * from './connector';\r\nexport * from './event';\r\nexport * from './error';\r\nexport * from './generator';\r\nexport * from './item';\r\nexport * from './ingest';\r\nexport * from './library';\r\nexport * from './meta';\r\nexport * from './metable';\r\nexport * from './module';\r\nexport * from './authorship';\r\nexport * from './pendable';\r\nexport * from './project';\r\nexport * from './provider';\r\nexport * from './proxy';\r\nexport * from './purgable';\r\nexport * from './response';\r\nexport * from './scenario';\r\nexport * from './selectable';\r\nexport * from './setting';\r\nexport * from './synthesizer';\r\nexport * from './user';\r\nexport * from './video';\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  private server: string;\n  readonly version: number;\n\n\n  constructor() {\n    // default values\n    this.server = 'http://api.narra';\n    this.version = 1;\n  }\n\n  //\n  // setters\n  //\n  public set apiServer(server: string) {\n    this.server = server;\n  }\n\n  //\n  // getters\n  //\n  public get apiServer(): string {\n    return this.server;\n  }\n\n  //\n  // public methods\n  //\n  public query(path: string): string {\n    return this.server + '/v' + this.version + '/' + path;\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Connector, Response} from '../models';\nimport {ServerService} from './server.service';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectorService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET connectors '/v1/connectors'\n  public getConnectors(): Observable<Response<Connector[], 'connectors'>> {\n    return this.http.get<any>(this.serverService.query('connectors'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {retry, catchError} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Event, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET events by default '/v1/events/me' possibly can be modified to admin's all '/v1/events'\n  public getEvents(filter: string = 'me'): Observable<Response<Event[], 'events'>> {\n    return this.http.get<any>(this.serverService.query('events/' + filter))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Generator, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneratorService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET generators '/v1/generators'\n  public getGenerators(): Observable<Response<Generator[], 'generators'>> {\n    return this.http.get<any>(this.serverService.query('generators'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, mergeMap, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Candidate, Item, Library, Meta, Proxy, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // POST check url '/v1/items/check'\n  public check(url: string): Observable<Response<Proxy[], 'proxies'>> {\n    return this.http.post<any>(this.serverService.query('items/check'), { url }, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST new item '/v1/items/new'\n  public addItems(candidates: Candidate[]): Observable<Response<string[], 'ids'>> {\n    return this.http.post<any>(this.serverService.query('items/new'), { candidates }, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET item '/v1/items/{id}'\n  public getItem(id: string): Observable<Response<Item, 'item'>> {\n    return this.http.get<any>(this.serverService.query('items/' + id))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n\n  // POST new item metadata '/v1/items/{name}/metadata/new'\n  public addItemMeta(id: string, meta: Pick<Meta, 'name' | 'value' | 'generator'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('items/' + id + '/metadata/new'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update item metadata '/v1/items/{name}/metadata/{meta}/update'\n  public updateItemMeta(id: string, meta: Pick<Meta, 'name' | 'value' | 'generator'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('items/' + id + '/metadata/' + meta.name + '/update'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete item metadata '/v1/items/{name}/metadata/{meta}/delete'\n  public deleteItemMeta(id: string, meta: Pick<Meta, 'name' | 'generator'>): Observable<Response<string, 'name'>> {\n    return this.http.get<any>(this.serverService.query('items/' + id + '/metadata/' + meta.name + '/delete?generator=' + meta.generator))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Item, Library, Meta, Project, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // POST validate '/v1/libraries/validate'\n  public validate(name: string): Observable<Response<boolean, 'validation'>> {\n    return this.http.post<any>(this.serverService.query('libraries/validate'), {name}, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET libraries '/v1/libraries'\n  public getLibraries(): Observable<Response<Library[], 'libraries'>> {\n    return this.http.get<any>(this.serverService.query('libraries'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET library '/v1/libraries/{id}'\n  public getLibrary(id: string): Observable<Response<Library, 'library'>> {\n    return this.http.get<any>(this.serverService.query('libraries/' + id))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET library items '/v1/libraries/{id}/items'\n  public getItems(id: string): Observable<Response<Item[], 'items'>> {\n    return this.http.get<any>(this.serverService.query('libraries/' + id + '/items'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST new library '/v1/libraries/new'\n  public addLibrary(library: Library): Observable<Response<Library, 'library'>> {\n    return this.http.post<any>(this.serverService.query('libraries/new'), library, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update library '/v1/libraries/{id}/update'\n  public updateLibrary(library: Library): Observable<Response<Library, 'library'>> {\n    return this.http.post<any>(this.serverService.query('libraries/' + library.id + '/update'), library, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete library '/v1/libraries/{id}/delete'\n  public deleteLibrary(id: string): Observable<Response<string, 'id'>> {\n    return this.http.get<any>(this.serverService.query('libraries/' + id + '/delete'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST new library metadata '/v1/libraries/{name}/metadata/new'\n  public addLibraryMeta(id: string, meta: Pick<Meta, 'name' | 'value'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('libraries/' + id + '/metadata/new'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update library metadata '/v1/libraries/{name}/metadata/{meta}/update'\n  public updateLibraryMeta(id: string, meta: Pick<Meta, 'name' | 'value'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('libraries/' + id + '/metadata/' + meta.name + '/update'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete library metadata '/v1/libraries/{name}/metadata/{meta}/delete'\n  public deleteLibraryMeta(id: string, meta: Pick<Meta, 'name'>): Observable<Response<string, 'name'>> {\n    return this.http.get<any>(this.serverService.query('libraries/' + id + '/metadata/' + meta.name + '/delete'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Meta, Project, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // POST validate '/v1/projects/validate'\n  public validate(id: string, name: string): Observable<Response<boolean, 'validation'>> {\n    return this.http.post<any>(this.serverService.query('projects/validate'), {id, name}, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET projects '/v1/projects'\n  public getProjects(): Observable<Response<Project[], 'projects'>> {\n    return this.http.get<any>(this.serverService.query('projects'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET project '/v1/projects/{name}'\n  public getProject(id: string): Observable<Response<Project, 'project'>> {\n    return this.http.get<any>(this.serverService.query('projects/' + id))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST new project '/v1/projects/new'\n  public addProject(project: Project): Observable<Response<Project, 'project'>> {\n    return this.http.post<any>(this.serverService.query('projects/new'), project, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update project '/v1/projects/{name}/update'\n  public updateProject(project: Project): Observable<Response<Project, 'project'>> {\n    return this.http.post<any>(this.serverService.query('projects/' + project.id + '/update'), project, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete project '/v1/projects/{name}/delete'\n  public deleteProject(id: string): Observable<Response<string, 'name'>> {\n    return this.http.get<any>(this.serverService.query('projects/' + id + '/delete'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST new project metadata '/v1/projects/{name}/metadata/new'\n  public addProjectMeta(id: string, meta: Pick<Meta, 'name' | 'value'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('projects/' + id + '/metadata/new'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update project metadata '/v1/projects/{name}/metadata/{meta}/update'\n  public updateProjectMeta(id: string, meta: Pick<Meta, 'name' | 'value'>): Observable<Response<Meta, 'metadata'>> {\n    return this.http.post<any>(this.serverService.query('projects/' + id + '/metadata/' + meta.name + '/update'), meta, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete project metadata '/v1/projects/{name}/metadata/{meta}/delete'\n  public deleteProjectMeta(id: string, meta: Pick<Meta, 'name'>): Observable<Response<string, 'name'>> {\n    return this.http.get<any>(this.serverService.query('projects/' + id + '/metadata/' + meta.name + '/delete'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {retry, catchError} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Provider, Response} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProviderService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET authentication providers '/auth/providers'\n  public getProviders(): Observable<Response<Provider[], 'providers'>> {\n    return this.http.get<any>(this.serverService.apiServer + '/auth/providers')\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Response, Scenario} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScenarioService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET scenarios '/v1/scenarios'\n  public getScenarios(): Observable<Response<Scenario[], 'scenarios'>> {\n    return this.http.get<any>(this.serverService.query('scenarios'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET scenario '/v1/scenarios/{id}'\n  public getScenario(id: string): Observable<Response<Scenario, 'scenario'>> {\n    return this.http.get<any>(this.serverService.query('scenarios/' + id))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Response, Setting} from '../models';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET settings '/v1/settings'\n  public getSettings(): Observable<Response<Setting[], 'settings'>> {\n    return this.http.get<any>(this.serverService.query('settings'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET setting '/v1/settings/{name}'\n  public getSetting(name: string): Observable<Response<Setting, 'setting'>> {\n    return this.http.get<any>(this.serverService.query('settings/' + name))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update setting '/v1/settings/{name}/update'\n  public updateSetting(setting: Setting): Observable<Response<Setting, 'setting'>> {\n    return this.http.post<any>(this.serverService.query('settings/' + name + '/update'), setting, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET settings default values '/v1/settings/defaults'\n  public getDefaults(): Observable<Response<Setting[], 'settings'>> {\n    return this.http.get<any>(this.serverService.query('settings/defaults'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ServerService} from './server.service';\nimport {catchError, map, retry} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {Response, Synthesizer} from '../models';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SynthesizerService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET synthesizers '/v1/synthesizers'\n  public getSynthesizers(): Observable<Response<Synthesizer[], 'synthesizers'>> {\n    return this.http.get<any>(this.serverService.query('synthesizers'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Module, Response} from '../models';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET users '/v1/system/version'\n  public getVersion(): Observable<Response<string, 'version'>> {\n    return this.http.get<any>(this.serverService.query('system/version'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET users '/v1/system/modules'\n  public getModules(): Observable<Response<Module[], 'modules'>> {\n    return this.http.get<any>(this.serverService.query('system/modules'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {ErrorHelper} from '../helpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // POST upload '/v1/upload'\n  public upload(file: File): Observable<any> {\n    // prepare data\n    const uploadData = new FormData();\n    // set file\n    uploadData.append('file', file);\n    // upload\n    return this.http.post<any>(this.serverService.query('upload'), uploadData, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(\n      retry(1),\n      catchError(ErrorHelper.handleError)\n    );\n  }\n}\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ServerService} from './server.service';\nimport {Response, User} from '../models';\nimport {ErrorHelper} from '../helpers';\nimport {RoleType} from \"../enums\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private serverService: ServerService) {\n  }\n\n  // GET logged user '/v1/users/me'\n  public getLoggedUser(): Observable<Response<User, 'user'>> {\n    return this.http.get<any>(this.serverService.query('users/me'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET users '/v1/users'\n  public getUsers(): Observable<Response<User[], 'users'>> {\n    return this.http.get<any>(this.serverService.query('users'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET user '/v1/users/{username}'\n  public getUser(username: string): Observable<Response<User, 'user'>> {\n    return this.http.get<any>(this.serverService.query('users/' + username))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // GET delete user '/v1/users/{username}/delete'\n  public deleteUser(username: string): Observable<Response<string, 'username'>> {\n    return this.http.get<any>(this.serverService.query('users/' + username + '/delete'))\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n\n  // POST update user '/v1/users/{username}/update'\n  public updateUser(user: User): Observable<Response<User, 'user'>> {\n    return this.http.post<any>(this.serverService.query('users/' + user.username + '/update'), user, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(ErrorHelper.handleError)\n      );\n  }\n}\n","/**\r\n * @license\r\n *\r\n * Copyright (C) 2020 narra.eu\r\n *\r\n * This file is part of Narra Angular API.\r\n *\r\n * Narra Angular API is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * Narra Angular API is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * Authors: Michal Mocnak <michal@narra.eu>\r\n */\r\n\r\nexport * from './connector.service';\r\nexport * from './event.service';\r\nexport * from './generator.service';\r\nexport * from './item.service';\r\nexport * from './library.service';\r\nexport * from './project.service';\r\nexport * from './provider.service';\r\nexport * from './scenario.service';\r\nexport * from './server.service';\r\nexport * from './setting.service';\r\nexport * from './synthesizer.service';\r\nexport * from './system.service';\r\nexport * from './upload.service';\r\nexport * from './user.service';\r\n","/**\n * @license\n *\n * Copyright (C) 2020 narra.eu\n *\n * This file is part of Narra Angular API.\n *\n * Narra Angular API is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Narra Angular API is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Narra Angular API. If not, see <http://www.gnu.org/licenses/>.\n *\n * Authors: Michal Mocnak <michal@narra.eu>\n */\n\nexport * from './enums';\nexport * from './helpers';\nexport * from './models';\nexport * from './services';\n","/*\n * Public API Surface of @narra/api\n */\n\nexport * as narra from './lib';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}